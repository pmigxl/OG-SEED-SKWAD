//#include <PID_v1.h>

#include <DualMC33926MotorShield.h>
#include <Encoder.h>

double pie = 3.14159;
bool flag;
const int motor_counts = 3200;
const double r = 3.0; //radius of the wheel in inches


Encoder encoderM1(2, 5);
Encoder encoderM2(3, 6);
DualMC33926MotorShield md;



int M1_CLK_STATE = 0;
int M1_DT_STATE = 0;
int M2_CLK_STATE = 0;
int M2_DT_STATE = 0;



double wheelThetaStart1;
double wheelThetaStart2;
double wheelDistStart1;
double wheelDistStart2;
const double distance = 6.0;

double enc1_double;
double enc2_double;
double enc2_OUT;


//PID enc2_PID(&enc2_double,&enc2_OUT,&enc1_double,0.078,0.00002909,0,DIRECT);

void setup() {
  Serial.begin(115200);
  md.init();
  //enc2_PID.SetMode(AUTOMATIC);
}


void loop() {
  
  long enc1 = encoderM1.read() * -1;
  double wheelTheta1 = (2.0 * pie * (double)enc1) / (double)motor_counts;
  double wheelDistance1 = (wheelTheta1 * r)/12;

  
  long enc2 = encoderM2.read();
  double wheelTheta2 = (2.0 * pie * (double)enc2) / (double)motor_counts;
  double wheelDistance2 = (wheelTheta2 * r)/12;
  //enc1_double = (double)enc1;
  //enc2_double = (double)enc2;
  
  //enc2_PID.Compute();
  //enc2 = (long)enc2_OUT;
  if(wheelDistance1 <= distance){
    md.setM1Speed(200);
    md.setM2Speed(-200);
    Serial.print(enc1);
    Serial.print("\t");
    Serial.println(wheelDistance1);
    Serial.print("\t");
    Serial.println(wheelDistance2);
  }
  else if(wheelDistance1 > distance){
    while(true){
    md.setM1Speed(0);
    md.setM2Speed(0);
    }
  }
  
}
